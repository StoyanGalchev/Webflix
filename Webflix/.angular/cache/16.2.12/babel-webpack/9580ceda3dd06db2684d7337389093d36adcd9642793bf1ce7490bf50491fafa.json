{"ast":null,"code":"import { environment } from \"src/environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  constructor(http) {\n    this.http = http;\n  }\n  getComments(movieId) {\n    return this.http.get(`${environment.apiUrl}/movies/${movieId}/comments`);\n  }\n  createComment(text, movieId) {\n    return this.http.post(`${environment.apiUrl}/movies/${movieId}/comments`, {\n      text\n    });\n  }\n  deletesComment(commentId) {\n    console.log(commentId);\n    return this.http.delete(`${environment.apiUrl}/movies/${commentId}/delete`);\n  }\n  static #_ = this.ɵfac = function CommentService_Factory(t) {\n    return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentService,\n    factory: CommentService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["environment","CommentService","constructor","http","getComments","movieId","get","apiUrl","createComment","text","post","deletesComment","commentId","console","log","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/stoyangalchev/Desktop/Webflix-Angular/Webflix/src/app/feature/services/comment.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Comment } from \"../../Types/Comment\";\nimport { environment } from \"src/environments/environment.development\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentService {\n  constructor(private http: HttpClient) {}\n\n  getComments(movieId: string) {\n    return this.http.get<Comment>(\n      `${environment.apiUrl}/movies/${movieId}/comments`\n    );\n  }\n\n  createComment(text: string, movieId: string) {\n    return this.http.post<Comment>(\n      `${environment.apiUrl}/movies/${movieId}/comments`,\n      { text }\n    );\n  }\n  deletesComment(commentId: string) {\n    console.log(commentId);\n    return this.http.delete<Comment>(\n      `${environment.apiUrl}/movies/${commentId}/delete`\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,WAAWA,CAACC,OAAe;IACzB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,GAAGN,WAAW,CAACO,MAAM,WAAWF,OAAO,WAAW,CACnD;EACH;EAEAG,aAAaA,CAACC,IAAY,EAAEJ,OAAe;IACzC,OAAO,IAAI,CAACF,IAAI,CAACO,IAAI,CACnB,GAAGV,WAAW,CAACO,MAAM,WAAWF,OAAO,WAAW,EAClD;MAAEI;IAAI,CAAE,CACT;EACH;EACAE,cAAcA,CAACC,SAAiB;IAC9BC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,OAAO,IAAI,CAACT,IAAI,CAACY,MAAM,CACrB,GAAGf,WAAW,CAACO,MAAM,WAAWK,SAAS,SAAS,CACnD;EACH;EAAC,QAAAI,CAAA,G;qBApBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}