{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { mergeMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/comment.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CommentComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Please enter some text! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CommentComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, CommentComponent_div_8_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n  }\n}\nexport let CommentComponent = /*#__PURE__*/(() => {\n  class CommentComponent {\n    constructor(route, commentService) {\n      this.route = route;\n      this.commentService = commentService;\n      this.commentIsCreated = new EventEmitter();\n      this.movieId = this.route.snapshot.params[\"id\"];\n    }\n    submitHandler(form) {\n      if (form.invalid) {\n        return;\n      }\n      const {\n        comment\n      } = form.value;\n      this.commentService.createComment(comment, this.movieId).pipe(mergeMap(() => {\n        return this.commentService.getComments(this.movieId);\n      })).subscribe(comments => {\n        this.commentIsCreated.emit(comments);\n      });\n      form.reset();\n    }\n    static #_ = this.ɵfac = function CommentComponent_Factory(t) {\n      return new (t || CommentComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CommentService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CommentComponent,\n      selectors: [[\"app-comment\"]],\n      outputs: {\n        commentIsCreated: \"commentIsCreated\"\n      },\n      decls: 9,\n      vars: 1,\n      consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form\"], [\"for\", \"comment\"], [\"name\", \"comment\", \"id\", \"comment\", \"placeholder\", \"Add your comment here...\", \"ngModel\", \"\", \"required\", \"\"], [\"comment\", \"ngModel\"], [\"type\", \"submit\", \"value\", \"Add comment\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"], [4, \"ngIf\"]],\n      template: function CommentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r4 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CommentComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r4);\n            const _r0 = i0.ɵɵreference(1);\n            return i0.ɵɵresetView(ctx.submitHandler(_r0));\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n          i0.ɵɵtext(4, \"What is on your mind?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"textarea\", 4, 5)(7, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, CommentComponent_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(6);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", _r1.touched);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\"form[_ngcontent-%COMP%]{position:relative}.form[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;gap:3em;padding-top:2em}form[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:2em;padding:1em 0}form[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{resize:none;width:30em;height:10em;border:5px solid #ed0000}form[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:1.5em;background-color:#000;color:#ed0000;border:1px solid #ed0000;padding:1em 2em}form[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover{color:#fff;border-color:#fff;cursor:pointer}form[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{margin:0;padding:0;position:absolute;bottom:-15%;left:38%;color:red;font-size:1.2em}\"]\n    });\n  }\n  return CommentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}