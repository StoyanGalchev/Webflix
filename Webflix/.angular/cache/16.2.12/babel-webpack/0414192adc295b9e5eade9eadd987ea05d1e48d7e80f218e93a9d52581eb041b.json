{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./shared/error-message/error.service\";\nexport let AppInterceptor = /*#__PURE__*/(() => {\n  class AppInterceptor {\n    constructor(router, errorService) {\n      this.router = router;\n      this.errorService = errorService;\n    }\n    intercept(req, next) {\n      req = req.clone({\n        withCredentials: true\n      });\n      return next.handle(req).pipe(catchError(err => {\n        if (err.status === 404) {\n          this.router.navigate([\"/404\"]);\n        } else {\n          this.errorService.setError(err);\n        }\n        return [err];\n      }));\n    }\n    static #_ = this.ɵfac = function AppInterceptor_Factory(t) {\n      return new (t || AppInterceptor)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ErrorService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppInterceptor,\n      factory: AppInterceptor.ɵfac\n    });\n  }\n  return AppInterceptor;\n})();\nexport const appInterceptorProvider = {\n  multi: true,\n  useClass: AppInterceptor,\n  provide: HTTP_INTERCEPTORS\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}