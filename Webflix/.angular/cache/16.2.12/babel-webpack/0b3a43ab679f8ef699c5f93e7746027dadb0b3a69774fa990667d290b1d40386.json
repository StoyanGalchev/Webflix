{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.emailValidatorPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n  }\n  submitHandler(form) {\n    if (form.invalid) {\n      return;\n    }\n    const {\n      username,\n      email,\n      passwords,\n      age\n    } = form.value;\n    this.userService.register(username, email, passwords.password, passwords.rePassword, age).subscribe(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","userService","router","emailValidatorPattern","submitHandler","form","invalid","username","email","passwords","age","value","register","password","rePassword","subscribe","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/stoyangalchev/Desktop/Webflix-Angular/Webflix/src/app/feature/register/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  emailValidatorPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\n  \n\n  constructor(private userService: UserService, private router: Router) { }\n\n  submitHandler(form: NgForm): void {\n\n    if (form.invalid) {\n      return;\n    }\n\n    const {\n      username,\n      email,\n      passwords,\n      age,\n    } = form.value;\n    \n    this.userService\n      .register(username,\n        email,\n        passwords.password,\n        passwords.rePassword,\n        age,)\n      .subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n  }\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAC,qBAAqB,GAAG,0CAA0C;EAGM;EAExEC,aAAaA,CAACC,IAAY;IAExB,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChB;;IAGF,MAAM;MACJC,QAAQ;MACRC,KAAK;MACLC,SAAS;MACTC;IAAG,CACJ,GAAGL,IAAI,CAACM,KAAK;IAEd,IAAI,CAACV,WAAW,CACbW,QAAQ,CAACL,QAAQ,EAChBC,KAAK,EACLC,SAAS,CAACI,QAAQ,EAClBJ,SAAS,CAACK,UAAU,EACpBJ,GAAG,CAAE,CACNK,SAAS,CAAC,MAAK;MACd,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACN;CAED;AA/BYjB,iBAAiB,GAAAkB,UAAA,EAL7BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrB,iBAAiB,CA+B7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}