{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { DEFAULT_USER_IMG_URL } from '../constats/defaultImageUrl';\nimport { environment } from \"../../../environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    get isLoggedIn() {\n      return !!this.user;\n    }\n    constructor(http) {\n      this.http = http;\n      this.user$$ = new BehaviorSubject(undefined);\n      this.user$ = this.user$$.asObservable();\n      this.subscription = this.user$.subscribe(user => {\n        this.user = user;\n      });\n    }\n    login(username, password) {\n      return this.http.post(`${environment.apiUrl}/login`, {\n        username,\n        password\n      }).pipe(tap(user => this.user$$.next(user)));\n    }\n    register(username, email, password, rePassword, age) {\n      return this.http.post(`${environment.apiUrl}/register`, {\n        username,\n        email,\n        password,\n        rePassword,\n        age,\n        imageUrl: DEFAULT_USER_IMG_URL\n      });\n    }\n    logout() {\n      return this.http.post(`${environment.apiUrl}/logout`, {}).pipe(tap(() => this.user$$.next(undefined)));\n    }\n    getProfile() {\n      return this.http.get(`${environment.apiUrl}/users/profile`).pipe(tap(user => this.user$$.next(user)));\n    }\n    updateProfile(imageUrl) {\n      return this.http.put(`${environment.apiUrl}/users/profile`, {\n        imageUrl\n      }).pipe(tap(user => this.user$$.next(user)));\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}