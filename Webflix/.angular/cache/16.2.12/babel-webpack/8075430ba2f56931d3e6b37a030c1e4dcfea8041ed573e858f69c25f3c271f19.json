{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { mergeMap } from 'rxjs';\nexport let CommentComponent = class CommentComponent {\n  constructor(route, commentService) {\n    this.route = route;\n    this.commentService = commentService;\n    this.commentIsCreated = new EventEmitter();\n    this.movieId = this.route.snapshot.params[\"id\"];\n  }\n  submitHandler(form) {\n    if (form.invalid) {\n      return;\n    }\n    const {\n      comment\n    } = form.value;\n    this.commentService.createComment(comment, this.movieId).pipe(mergeMap(() => {\n      return this.commentService.getComments(this.movieId);\n    })).subscribe(comments => {\n      this.commentIsCreated.emit(comments);\n    });\n    form.reset();\n  }\n};\n__decorate([Output()], CommentComponent.prototype, \"commentIsCreated\", void 0);\nCommentComponent = __decorate([Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})], CommentComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","mergeMap","CommentComponent","constructor","route","commentService","commentIsCreated","movieId","snapshot","params","submitHandler","form","invalid","comment","value","createComment","pipe","getComments","subscribe","comments","emit","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/stoyangalchev/Desktop/Webflix-Angular/Webflix/src/app/feature/comment/comment.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommentService } from '../services/comment.service';\nimport { mergeMap } from 'rxjs';\n\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent{\n\n  @Output() commentIsCreated = new EventEmitter<any>();\n  \n  movieId = this.route.snapshot.params[\"id\"];\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private commentService: CommentService\n    ){}\n\n  submitHandler(form: NgForm){\n    if(form.invalid){\n      return\n    }\n\n    const {comment} = form.value;\n\n\n    this.commentService.createComment(comment, this.movieId).pipe(\n      mergeMap(()=>{\n        return this.commentService.getComments(this.movieId)\n      })\n    )\n    .subscribe((comments)=>{\n        this.commentIsCreated.emit(comments)\n    });\n\n    form.reset();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAUC,MAAM,QAAQ,eAAe;AAIvE,SAASC,QAAQ,QAAQ,MAAM;AAQxB,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;IAPd,KAAAC,gBAAgB,GAAG,IAAIP,YAAY,EAAO;IAEpD,KAAAQ,OAAO,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;EAMtC;EAEJC,aAAaA,CAACC,IAAY;IACxB,IAAGA,IAAI,CAACC,OAAO,EAAC;MACd;;IAGF,MAAM;MAACC;IAAO,CAAC,GAAGF,IAAI,CAACG,KAAK;IAG5B,IAAI,CAACT,cAAc,CAACU,aAAa,CAACF,OAAO,EAAE,IAAI,CAACN,OAAO,CAAC,CAACS,IAAI,CAC3Df,QAAQ,CAAC,MAAI;MACX,OAAO,IAAI,CAACI,cAAc,CAACY,WAAW,CAAC,IAAI,CAACV,OAAO,CAAC;IACtD,CAAC,CAAC,CACH,CACAW,SAAS,CAAEC,QAAQ,IAAG;MACnB,IAAI,CAACb,gBAAgB,CAACc,IAAI,CAACD,QAAQ,CAAC;IACxC,CAAC,CAAC;IAEFR,IAAI,CAACU,KAAK,EAAE;EACd;CACD;AA7BWC,UAAA,EAATtB,MAAM,EAAE,C,yDAA4C;AAF1CE,gBAAgB,GAAAoB,UAAA,EAL5BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWvB,gBAAgB,CA+B5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}