{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {\n    this.apiError$$ = new BehaviorSubject(null);\n  }\n  setError(error) {\n    this.apiError$$.next(error);\n  }\n  static #_ = this.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ErrorService","constructor","apiError$$","setError","error","next","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/stoyangalchev/Desktop/Webflix-Angular/Webflix/src/app/shared/error-message/error.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  \n  apiError$$ = new BehaviorSubject(null);\n  \n  constructor() { }\n  \n  setError(error: any): void {\n    this.apiError$$.next(error);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAFA,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAC,IAAI,CAAC;EAEtB;EAEhBI,QAAQA,CAACC,KAAU;IACjB,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,KAAK,CAAC;EAC7B;EAAC,QAAAE,CAAA,G;qBARUN,YAAY;EAAA;EAAA,QAAAO,EAAA,G;WAAZP,YAAY;IAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}